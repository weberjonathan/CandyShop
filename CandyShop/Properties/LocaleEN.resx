<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERROR_CHOCO_PATH" xml:space="preserve">
    <value>Failed to locate Chocolatey binary. Please set the full path in the configuration file and restart the application. Check the 'Extras' menu to quickly navigate to the config file. If this is the first time launching the application or the config file does not exist, it will be created on application exit.</value>
  </data>
  <data name="ERROR_DISABLED_START_WITH_SYSTEM" xml:space="preserve">
    <value>Failed to disable Candy Shop launch with system start.</value>
  </data>
  <data name="ERROR_RETRIEVING_INSTALLED_PACKAGES" xml:space="preserve">
    <value>Failed to retrieve installed packages: {0}</value>
  </data>
  <data name="ERROR_RETRIEVING_OUTDATED_PACKAGES" xml:space="preserve">
    <value>Failed to retrieve outdated packages: {0}</value>
  </data>
  <data name="ERROR_RETRIEVING_PACKAGE_DETAILS" xml:space="preserve">
    <value>Failed to retrieve package details: {0}</value>
  </data>
  <data name="ERROR_UPGRADING_OUTDATED_PACKAGES" xml:space="preserve">
    <value>Error upgrading outdated packages: {0}.

Hint: Check the output in the Candy Shop console window before pressing OK, or see the logs. (The log folder of the package manager is available through the Extras menu.)</value>
  </data>
  <data name="ERROR_WINGET_PATH" xml:space="preserve">
    <value>Failed to locate Winget binary. Please set the full path in the configuration file and restart the application. Check the 'Extras' menu to quickly navigate to the config file. If this is the first time launching the application or the config file does not exist, it will be created on application exit.</value>
  </data>
  <data name="NOT_IGNORE" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="NOT_SHOW" xml:space="preserve">
    <value>Show more</value>
  </data>
  <data name="NOT_TEXT_MULTI" xml:space="preserve">
    <value>{0} {1} packages are outdated.</value>
  </data>
  <data name="NOT_TEXT_SINGLE" xml:space="preserve">
    <value>{0} {1} package is outdated.</value>
  </data>
  <data name="TEXT_APP_TITLE" xml:space="preserve">
    <value>{0} v{2} for {1}</value>
  </data>
  <data name="TEXT_CANCEL" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="TEXT_COL_AVAILABLE" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="TEXT_COL_CURRENT" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="TEXT_COL_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TEXT_COL_PINNED" xml:space="preserve">
    <value>Pinned</value>
  </data>
  <data name="TEXT_COL_SOURCE" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="TEXT_COL_VERSION" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="TEXT_HIDE_PERMANENTLY" xml:space="preserve">
    <value>Permanently hide this warning?</value>
  </data>
  <data name="TEXT_LICENSE_TITLE" xml:space="preserve">
    <value>{0} License</value>
  </data>
  <data name="TEXT_LOADING" xml:space="preserve">
    <value>Loading ...</value>
  </data>
  <data name="TEXT_LOADING_INSTALLED" xml:space="preserve">
    <value>Searching for installed packages</value>
  </data>
  <data name="TEXT_LOADING_OUTDATED" xml:space="preserve">
    <value>Searching for outdated packages</value>
  </data>
  <data name="TEXT_MENU_LOGS" xml:space="preserve">
    <value>Open {0} logs</value>
  </data>
  <data name="TEXT_NO_ADMIN_HINT" xml:space="preserve">
    <value>The selected package manager will be executed without administrator privileges. To hide this warning, enable the property 'SuppressAdminWarning'. If elevated privileges are required, launch CandyShop as administrator or enable the property 'ElevateOnDemand'.</value>
  </data>
  <data name="TEXT_NO_ADMIN_HINT_SHORT" xml:space="preserve">
    <value> (no administrator privileges)</value>
  </data>
  <data name="TEXT_SELECTED_PACKAGE_COUNT" xml:space="preserve">
    <value>Selected packages: {0}</value>
  </data>
  <data name="TEXT_TS_DESELECT" xml:space="preserve">
    <value>&amp;Deselect all</value>
  </data>
  <data name="TEXT_TS_REFRESH" xml:space="preserve">
    <value>&amp;Refresh</value>
  </data>
  <data name="TEXT_TS_REFRESH_INSTALLED" xml:space="preserve">
    <value>Refresh &amp;installed only</value>
  </data>
  <data name="TEXT_TS_SELECT_ALL" xml:space="preserve">
    <value>&amp;Select all</value>
  </data>
  <data name="TEXT_TS_SELECT_SMART" xml:space="preserve">
    <value>Select &amp;top level packages</value>
  </data>
  <data name="TEXT_UPGRADE_ALL" xml:space="preserve">
    <value>Upgrade &amp;All</value>
  </data>
  <data name="TEXT_UPGRADE_SELECTED" xml:space="preserve">
    <value>&amp;Upgrade</value>
  </data>
  <data name="URL_GITHUB" xml:space="preserve">
    <value>https://github.com/weberjonathan/CandyShop</value>
  </data>
  <data name="URL_META_PACKAGES" xml:space="preserve">
    <value>https://docs.chocolatey.org/en-us/faqs#what-is-the-difference-between-packages-no-suffix-as-compared-to.install.portable</value>
  </data>
</root>